// Code generated by protoc-gen-go. DO NOT EDIT.
// source: middleware/middleware.proto

package middleware

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JwtRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JwtRequest) Reset()         { *m = JwtRequest{} }
func (m *JwtRequest) String() string { return proto.CompactTextString(m) }
func (*JwtRequest) ProtoMessage()    {}
func (*JwtRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d89c3b3ad9147, []int{0}
}

func (m *JwtRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JwtRequest.Unmarshal(m, b)
}
func (m *JwtRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JwtRequest.Marshal(b, m, deterministic)
}
func (m *JwtRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JwtRequest.Merge(m, src)
}
func (m *JwtRequest) XXX_Size() int {
	return xxx_messageInfo_JwtRequest.Size(m)
}
func (m *JwtRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JwtRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JwtRequest proto.InternalMessageInfo

func (m *JwtRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type JwtResponse struct {
	Firstname            string   `protobuf:"bytes,1,opt,name=firstname,proto3" json:"firstname,omitempty"`
	Lastname             string   `protobuf:"bytes,2,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Authorized           string   `protobuf:"bytes,4,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Exp                  string   `protobuf:"bytes,5,opt,name=exp,proto3" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JwtResponse) Reset()         { *m = JwtResponse{} }
func (m *JwtResponse) String() string { return proto.CompactTextString(m) }
func (*JwtResponse) ProtoMessage()    {}
func (*JwtResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d89c3b3ad9147, []int{1}
}

func (m *JwtResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JwtResponse.Unmarshal(m, b)
}
func (m *JwtResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JwtResponse.Marshal(b, m, deterministic)
}
func (m *JwtResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JwtResponse.Merge(m, src)
}
func (m *JwtResponse) XXX_Size() int {
	return xxx_messageInfo_JwtResponse.Size(m)
}
func (m *JwtResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JwtResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JwtResponse proto.InternalMessageInfo

func (m *JwtResponse) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *JwtResponse) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *JwtResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *JwtResponse) GetAuthorized() string {
	if m != nil {
		return m.Authorized
	}
	return ""
}

func (m *JwtResponse) GetExp() string {
	if m != nil {
		return m.Exp
	}
	return ""
}

func init() {
	proto.RegisterType((*JwtRequest)(nil), "middleware.JwtRequest")
	proto.RegisterType((*JwtResponse)(nil), "middleware.JwtResponse")
}

func init() { proto.RegisterFile("middleware/middleware.proto", fileDescriptor_ce5d89c3b3ad9147) }

var fileDescriptor_ce5d89c3b3ad9147 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xce, 0xcd, 0x4c, 0x49,
	0xc9, 0x49, 0x2d, 0x4f, 0x2c, 0x4a, 0xd5, 0x47, 0x30, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0xb8, 0x10, 0x22, 0x4a, 0x4a, 0x5c, 0x5c, 0x5e, 0xe5, 0x25, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x22, 0x5c, 0xac, 0x25, 0xf9, 0xd9, 0xa9, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x10, 0x8e, 0x52, 0x3f, 0x23, 0x17, 0x37, 0x58, 0x51, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x90, 0x0c, 0x17, 0x67, 0x5a, 0x66, 0x51, 0x71, 0x49, 0x5e, 0x62, 0x6e, 0x2a, 0x54, 0x25, 0x42,
	0x40, 0x48, 0x8a, 0x8b, 0x23, 0x27, 0x11, 0x2a, 0xc9, 0x04, 0x96, 0x84, 0xf3, 0x41, 0xe6, 0xa7,
	0xe6, 0x26, 0x66, 0xe6, 0x48, 0x30, 0x43, 0xcc, 0x07, 0x73, 0x84, 0xe4, 0xb8, 0xb8, 0x12, 0x4b,
	0x4b, 0x32, 0xf2, 0x8b, 0x32, 0xab, 0x52, 0x53, 0x24, 0x58, 0xc0, 0x52, 0x48, 0x22, 0x42, 0x02,
	0x5c, 0xcc, 0xa9, 0x15, 0x05, 0x12, 0xac, 0x60, 0x09, 0x10, 0xd3, 0xc8, 0x17, 0xec, 0xea, 0xe0,
	0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x7b, 0x14, 0x9e, 0x98, 0x1e, 0x92, 0x87, 0x11, 0x7e,
	0x93, 0x12, 0xc7, 0x10, 0x87, 0x78, 0x47, 0x89, 0x21, 0x89, 0x0d, 0x1c, 0x2e, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xa6, 0x26, 0xd8, 0x06, 0x36, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JwtServiceClient is the client API for JwtService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JwtServiceClient interface {
	JwtService(ctx context.Context, in *JwtRequest, opts ...grpc.CallOption) (*JwtResponse, error)
}

type jwtServiceClient struct {
	cc *grpc.ClientConn
}

func NewJwtServiceClient(cc *grpc.ClientConn) JwtServiceClient {
	return &jwtServiceClient{cc}
}

func (c *jwtServiceClient) JwtService(ctx context.Context, in *JwtRequest, opts ...grpc.CallOption) (*JwtResponse, error) {
	out := new(JwtResponse)
	err := c.cc.Invoke(ctx, "/middleware.JwtService/JwtService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JwtServiceServer is the server API for JwtService service.
type JwtServiceServer interface {
	JwtService(context.Context, *JwtRequest) (*JwtResponse, error)
}

// UnimplementedJwtServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJwtServiceServer struct {
}

func (*UnimplementedJwtServiceServer) JwtService(ctx context.Context, req *JwtRequest) (*JwtResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JwtService not implemented")
}

func RegisterJwtServiceServer(s *grpc.Server, srv JwtServiceServer) {
	s.RegisterService(&_JwtService_serviceDesc, srv)
}

func _JwtService_JwtService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JwtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JwtServiceServer).JwtService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/middleware.JwtService/JwtService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JwtServiceServer).JwtService(ctx, req.(*JwtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JwtService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "middleware.JwtService",
	HandlerType: (*JwtServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JwtService",
			Handler:    _JwtService_JwtService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "middleware/middleware.proto",
}
